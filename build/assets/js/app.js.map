{"version":3,"sources":["webpack:///build/assets/js/app.js","webpack:///webpack/bootstrap 8a28df028ced7bef5d99","webpack:///./resources/js/index.js","webpack:///./~/svg4everybody/dist/svg4everybody.js","webpack:///./resources/js/partials/fetchInsta.js","webpack:///./~/instafeed.js/instafeed.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_svg4everybody","_svg4everybody2","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","svg4everybody","apply","undefined","this","embed","parent","svg","target","fragment","document","createDocumentFragment","viewBox","hasAttribute","getAttribute","setAttribute","clone","cloneNode","childNodes","length","appendChild","firstChild","loadreadystatechange","xhr","onreadystatechange","readyState","cachedDocument","_cachedDocument","implementation","createHTMLDocument","body","innerHTML","responseText","_cachedTarget","_embeds","splice","map","item","getElementById","rawopts","oninterval","index","uses","use","parentNode","getSVGAncestor","src","opts","attributeName","polyfill","validate","removeChild","srcSplit","split","url","shift","join","requests","XMLHttpRequest","open","send","push","numberOfSvgUseElementsToBypass","requestAnimationFrame","Object","newerIEUA","webkitUA","olderEdgeUA","edgeUA","inIframe","window","top","self","test","navigator","userAgent","match","setTimeout","getElementsByTagName","node","nodeName","toLowerCase","_instafeed","fetchInsta","container","init","token","fetch","method","then","res","json","data","fillFeed","post","img","createImageTag","images","standard_resolution","el","createElement","__WEBPACK_AMD_DEFINE_FACTORY__","Instafeed","params","context","option","value","options","get","resolution","sortBy","links","mock","useHttp","unique","_genKey","prototype","hasNext","nextUrl","next","run","header","instanceName","script","clientId","accessToken","Error","before","_buildUrl","parse","response","anchor","childNodeCount","childNodeIndex","childNodesArr","e","eMsg","htmlString","httpProtocol","i","image","imageObj","imageString","imageUrl","imgHeight","imgOrient","imgUrl","imgWidth","j","k","len","len1","len2","parsedLimit","reverse","sortSettings","targetEl","tmpEl","error","meta","code","error_message","success","pagination","next_url","sort","Math","random","_sortBy","parseInt","limit","slice","filter","_filter","template","width","height","location","protocol","indexOf","replace","_makeTemplate","model","link","type","orientation","caption","_getObjectProperty","likes","count","comments","href","_error","after","base","endpoint","final","tagName","locationId","userId","S4","toString","substring","output","pattern","ref","varName","varValue","object","property","piece","pieces","sorter","a","b","valueA","valueB","bind","filteredImages","fn"],"mappings":"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","file":"./build/assets/js/app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _svg4everybody = __webpack_require__(1);\n\t\n\tvar _svg4everybody2 = _interopRequireDefault(_svg4everybody);\n\t\n\t__webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(0, _svg4everybody2.default)();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? // AMD. Register as an anonymous module unless amdModuleId is set\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t        return root.svg4everybody = factory();\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n\t    // only CommonJS-like environments that support module.exports,\n\t    // like Node.\n\t    module.exports = factory() : root.svg4everybody = factory();\n\t}(this, function() {\n\t    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n\t    function embed(parent, svg, target) {\n\t        // if the target exists\n\t        if (target) {\n\t            // create a document fragment to hold the contents of the target\n\t            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n\t            // conditionally set the viewBox on the svg\n\t            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n\t            // copy the contents of the clone into the fragment\n\t            for (// clone the target\n\t            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n\t                fragment.appendChild(clone.firstChild);\n\t            }\n\t            // append the fragment into the svg\n\t            parent.appendChild(fragment);\n\t        }\n\t    }\n\t    function loadreadystatechange(xhr) {\n\t        // listen to changes in the request\n\t        xhr.onreadystatechange = function() {\n\t            // if the request is ready\n\t            if (4 === xhr.readyState) {\n\t                // get the cached html document\n\t                var cachedDocument = xhr._cachedDocument;\n\t                // ensure the cached html document based on the xhr response\n\t                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n\t                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n\t                xhr._embeds.splice(0).map(function(item) {\n\t                    // get the cached target\n\t                    var target = xhr._cachedTarget[item.id];\n\t                    // ensure the cached target\n\t                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n\t                    // embed the target into the svg\n\t                    embed(item.parent, item.svg, target);\n\t                });\n\t            }\n\t        }, // test the ready state change immediately\n\t        xhr.onreadystatechange();\n\t    }\n\t    function svg4everybody(rawopts) {\n\t        function oninterval() {\n\t            // while the index exists in the live <use> collection\n\t            for (// get the cached <use> index\n\t            var index = 0; index < uses.length; ) {\n\t                // get the current <use>\n\t                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n\t                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n\t                svg && src) {\n\t                    if (polyfill) {\n\t                        if (!opts.validate || opts.validate(src, svg, use)) {\n\t                            // remove the <use> element\n\t                            parent.removeChild(use);\n\t                            // parse the src and get the url and id\n\t                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n\t                            // if the link is external\n\t                            if (url.length) {\n\t                                // get the cached xhr request\n\t                                var xhr = requests[url];\n\t                                // ensure the xhr request exists\n\t                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n\t                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n\t                                xhr._embeds.push({\n\t                                    parent: parent,\n\t                                    svg: svg,\n\t                                    id: id\n\t                                }), // prepare the xhr ready state change event\n\t                                loadreadystatechange(xhr);\n\t                            } else {\n\t                                // embed the local id into the svg\n\t                                embed(parent, svg, document.getElementById(id));\n\t                            }\n\t                        } else {\n\t                            // increase the index when the previous value was not \"valid\"\n\t                            ++index, ++numberOfSvgUseElementsToBypass;\n\t                        }\n\t                    }\n\t                } else {\n\t                    // increase the index when the previous value was not \"valid\"\n\t                    ++index;\n\t                }\n\t            }\n\t            // continue the interval\n\t            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n\t        }\n\t        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n\t        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n\t        // create xhr requests object\n\t        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n\t        // conditionally start the interval if the polyfill is active\n\t        polyfill && oninterval();\n\t    }\n\t    function getSVGAncestor(node) {\n\t        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n\t        return svg;\n\t    }\n\t    return svg4everybody;\n\t});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _instafeed = __webpack_require__(3);\n\t\n\tvar _instafeed2 = _interopRequireDefault(_instafeed);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar fetchInsta = function () {\n\t    var container = void 0;\n\t\n\t    var init = function init() {\n\t        container = document.getElementById('instagram-feed');\n\t\n\t        var token = '7498090227.b1f6f12.19b1a288657644c68f2623ccb1ef5d82';\n\t\n\t        var url = 'https://api.instagram.com/v1/users/self/media/recent/?access_token=' + token + '&count=9';\n\t\n\t        fetch(url, { method: 'get' }).then(function (res) {\n\t            return res.json();\n\t        }).then(function (data) {\n\t\n\t            fillFeed(data.data);\n\t        });\n\t    };\n\t\n\t    var fillFeed = function fillFeed(data) {\n\t\n\t        data.map(function (post) {\n\t            var img = createImageTag(post.images.standard_resolution);\n\t\n\t            container.appendChild(img);\n\t        });\n\t    };\n\t\n\t    var createImageTag = function createImageTag(el) {\n\t        var img = document.createElement('img');\n\t        img.src = el.url;\n\t        return img;\n\t    };\n\t\n\t    return {\n\t        init: init\n\t    };\n\t}();\n\t\n\tfetchInsta.init();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Generated by CoffeeScript 1.9.3\n\t(function() {\n\t  var Instafeed;\n\t\n\t  Instafeed = (function() {\n\t    function Instafeed(params, context) {\n\t      var option, value;\n\t      this.options = {\n\t        target: 'instafeed',\n\t        get: 'popular',\n\t        resolution: 'thumbnail',\n\t        sortBy: 'none',\n\t        links: true,\n\t        mock: false,\n\t        useHttp: false\n\t      };\n\t      if (typeof params === 'object') {\n\t        for (option in params) {\n\t          value = params[option];\n\t          this.options[option] = value;\n\t        }\n\t      }\n\t      this.context = context != null ? context : this;\n\t      this.unique = this._genKey();\n\t    }\n\t\n\t    Instafeed.prototype.hasNext = function() {\n\t      return typeof this.context.nextUrl === 'string' && this.context.nextUrl.length > 0;\n\t    };\n\t\n\t    Instafeed.prototype.next = function() {\n\t      if (!this.hasNext()) {\n\t        return false;\n\t      }\n\t      return this.run(this.context.nextUrl);\n\t    };\n\t\n\t    Instafeed.prototype.run = function(url) {\n\t      var header, instanceName, script;\n\t      if (typeof this.options.clientId !== 'string') {\n\t        if (typeof this.options.accessToken !== 'string') {\n\t          throw new Error(\"Missing clientId or accessToken.\");\n\t        }\n\t      }\n\t      if (typeof this.options.accessToken !== 'string') {\n\t        if (typeof this.options.clientId !== 'string') {\n\t          throw new Error(\"Missing clientId or accessToken.\");\n\t        }\n\t      }\n\t      if ((this.options.before != null) && typeof this.options.before === 'function') {\n\t        this.options.before.call(this);\n\t      }\n\t      if (typeof document !== \"undefined\" && document !== null) {\n\t        script = document.createElement('script');\n\t        script.id = 'instafeed-fetcher';\n\t        script.src = url || this._buildUrl();\n\t        header = document.getElementsByTagName('head');\n\t        header[0].appendChild(script);\n\t        instanceName = \"instafeedCache\" + this.unique;\n\t        window[instanceName] = new Instafeed(this.options, this);\n\t        window[instanceName].unique = this.unique;\n\t      }\n\t      return true;\n\t    };\n\t\n\t    Instafeed.prototype.parse = function(response) {\n\t      var anchor, childNodeCount, childNodeIndex, childNodesArr, e, eMsg, fragment, header, htmlString, httpProtocol, i, image, imageObj, imageString, imageUrl, images, img, imgHeight, imgOrient, imgUrl, imgWidth, instanceName, j, k, len, len1, len2, node, parsedLimit, reverse, sortSettings, targetEl, tmpEl;\n\t      if (typeof response !== 'object') {\n\t        if ((this.options.error != null) && typeof this.options.error === 'function') {\n\t          this.options.error.call(this, 'Invalid JSON data');\n\t          return false;\n\t        } else {\n\t          throw new Error('Invalid JSON response');\n\t        }\n\t      }\n\t      if (response.meta.code !== 200) {\n\t        if ((this.options.error != null) && typeof this.options.error === 'function') {\n\t          this.options.error.call(this, response.meta.error_message);\n\t          return false;\n\t        } else {\n\t          throw new Error(\"Error from Instagram: \" + response.meta.error_message);\n\t        }\n\t      }\n\t      if (response.data.length === 0) {\n\t        if ((this.options.error != null) && typeof this.options.error === 'function') {\n\t          this.options.error.call(this, 'No images were returned from Instagram');\n\t          return false;\n\t        } else {\n\t          throw new Error('No images were returned from Instagram');\n\t        }\n\t      }\n\t      if ((this.options.success != null) && typeof this.options.success === 'function') {\n\t        this.options.success.call(this, response);\n\t      }\n\t      this.context.nextUrl = '';\n\t      if (response.pagination != null) {\n\t        this.context.nextUrl = response.pagination.next_url;\n\t      }\n\t      if (this.options.sortBy !== 'none') {\n\t        if (this.options.sortBy === 'random') {\n\t          sortSettings = ['', 'random'];\n\t        } else {\n\t          sortSettings = this.options.sortBy.split('-');\n\t        }\n\t        reverse = sortSettings[0] === 'least' ? true : false;\n\t        switch (sortSettings[1]) {\n\t          case 'random':\n\t            response.data.sort(function() {\n\t              return 0.5 - Math.random();\n\t            });\n\t            break;\n\t          case 'recent':\n\t            response.data = this._sortBy(response.data, 'created_time', reverse);\n\t            break;\n\t          case 'liked':\n\t            response.data = this._sortBy(response.data, 'likes.count', reverse);\n\t            break;\n\t          case 'commented':\n\t            response.data = this._sortBy(response.data, 'comments.count', reverse);\n\t            break;\n\t          default:\n\t            throw new Error(\"Invalid option for sortBy: '\" + this.options.sortBy + \"'.\");\n\t        }\n\t      }\n\t      if ((typeof document !== \"undefined\" && document !== null) && this.options.mock === false) {\n\t        images = response.data;\n\t        parsedLimit = parseInt(this.options.limit, 10);\n\t        if ((this.options.limit != null) && images.length > parsedLimit) {\n\t          images = images.slice(0, parsedLimit);\n\t        }\n\t        fragment = document.createDocumentFragment();\n\t        if ((this.options.filter != null) && typeof this.options.filter === 'function') {\n\t          images = this._filter(images, this.options.filter);\n\t        }\n\t        if ((this.options.template != null) && typeof this.options.template === 'string') {\n\t          htmlString = '';\n\t          imageString = '';\n\t          imgUrl = '';\n\t          tmpEl = document.createElement('div');\n\t          for (i = 0, len = images.length; i < len; i++) {\n\t            image = images[i];\n\t            imageObj = image.images[this.options.resolution];\n\t            if (typeof imageObj !== 'object') {\n\t              eMsg = \"No image found for resolution: \" + this.options.resolution + \".\";\n\t              throw new Error(eMsg);\n\t            }\n\t            imgWidth = imageObj.width;\n\t            imgHeight = imageObj.height;\n\t            imgOrient = \"square\";\n\t            if (imgWidth > imgHeight) {\n\t              imgOrient = \"landscape\";\n\t            }\n\t            if (imgWidth < imgHeight) {\n\t              imgOrient = \"portrait\";\n\t            }\n\t            imageUrl = imageObj.url;\n\t            httpProtocol = window.location.protocol.indexOf(\"http\") >= 0;\n\t            if (httpProtocol && !this.options.useHttp) {\n\t              imageUrl = imageUrl.replace(/https?:\\/\\//, '//');\n\t            }\n\t            imageString = this._makeTemplate(this.options.template, {\n\t              model: image,\n\t              id: image.id,\n\t              link: image.link,\n\t              type: image.type,\n\t              image: imageUrl,\n\t              width: imgWidth,\n\t              height: imgHeight,\n\t              orientation: imgOrient,\n\t              caption: this._getObjectProperty(image, 'caption.text'),\n\t              likes: image.likes.count,\n\t              comments: image.comments.count,\n\t              location: this._getObjectProperty(image, 'location.name')\n\t            });\n\t            htmlString += imageString;\n\t          }\n\t          tmpEl.innerHTML = htmlString;\n\t          childNodesArr = [];\n\t          childNodeIndex = 0;\n\t          childNodeCount = tmpEl.childNodes.length;\n\t          while (childNodeIndex < childNodeCount) {\n\t            childNodesArr.push(tmpEl.childNodes[childNodeIndex]);\n\t            childNodeIndex += 1;\n\t          }\n\t          for (j = 0, len1 = childNodesArr.length; j < len1; j++) {\n\t            node = childNodesArr[j];\n\t            fragment.appendChild(node);\n\t          }\n\t        } else {\n\t          for (k = 0, len2 = images.length; k < len2; k++) {\n\t            image = images[k];\n\t            img = document.createElement('img');\n\t            imageObj = image.images[this.options.resolution];\n\t            if (typeof imageObj !== 'object') {\n\t              eMsg = \"No image found for resolution: \" + this.options.resolution + \".\";\n\t              throw new Error(eMsg);\n\t            }\n\t            imageUrl = imageObj.url;\n\t            httpProtocol = window.location.protocol.indexOf(\"http\") >= 0;\n\t            if (httpProtocol && !this.options.useHttp) {\n\t              imageUrl = imageUrl.replace(/https?:\\/\\//, '//');\n\t            }\n\t            img.src = imageUrl;\n\t            if (this.options.links === true) {\n\t              anchor = document.createElement('a');\n\t              anchor.href = image.link;\n\t              anchor.appendChild(img);\n\t              fragment.appendChild(anchor);\n\t            } else {\n\t              fragment.appendChild(img);\n\t            }\n\t          }\n\t        }\n\t        targetEl = this.options.target;\n\t        if (typeof targetEl === 'string') {\n\t          targetEl = document.getElementById(targetEl);\n\t        }\n\t        if (targetEl == null) {\n\t          eMsg = \"No element with id=\\\"\" + this.options.target + \"\\\" on page.\";\n\t          throw new Error(eMsg);\n\t        }\n\t        targetEl.appendChild(fragment);\n\t        header = document.getElementsByTagName('head')[0];\n\t        header.removeChild(document.getElementById('instafeed-fetcher'));\n\t        instanceName = \"instafeedCache\" + this.unique;\n\t        window[instanceName] = void 0;\n\t        try {\n\t          delete window[instanceName];\n\t        } catch (_error) {\n\t          e = _error;\n\t        }\n\t      }\n\t      if ((this.options.after != null) && typeof this.options.after === 'function') {\n\t        this.options.after.call(this);\n\t      }\n\t      return true;\n\t    };\n\t\n\t    Instafeed.prototype._buildUrl = function() {\n\t      var base, endpoint, final;\n\t      base = \"https://api.instagram.com/v1\";\n\t      switch (this.options.get) {\n\t        case \"popular\":\n\t          endpoint = \"media/popular\";\n\t          break;\n\t        case \"tagged\":\n\t          if (!this.options.tagName) {\n\t            throw new Error(\"No tag name specified. Use the 'tagName' option.\");\n\t          }\n\t          endpoint = \"tags/\" + this.options.tagName + \"/media/recent\";\n\t          break;\n\t        case \"location\":\n\t          if (!this.options.locationId) {\n\t            throw new Error(\"No location specified. Use the 'locationId' option.\");\n\t          }\n\t          endpoint = \"locations/\" + this.options.locationId + \"/media/recent\";\n\t          break;\n\t        case \"user\":\n\t          if (!this.options.userId) {\n\t            throw new Error(\"No user specified. Use the 'userId' option.\");\n\t          }\n\t          endpoint = \"users/\" + this.options.userId + \"/media/recent\";\n\t          break;\n\t        default:\n\t          throw new Error(\"Invalid option for get: '\" + this.options.get + \"'.\");\n\t      }\n\t      final = base + \"/\" + endpoint;\n\t      if (this.options.accessToken != null) {\n\t        final += \"?access_token=\" + this.options.accessToken;\n\t      } else {\n\t        final += \"?client_id=\" + this.options.clientId;\n\t      }\n\t      if (this.options.limit != null) {\n\t        final += \"&count=\" + this.options.limit;\n\t      }\n\t      final += \"&callback=instafeedCache\" + this.unique + \".parse\";\n\t      return final;\n\t    };\n\t\n\t    Instafeed.prototype._genKey = function() {\n\t      var S4;\n\t      S4 = function() {\n\t        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n\t      };\n\t      return \"\" + (S4()) + (S4()) + (S4()) + (S4());\n\t    };\n\t\n\t    Instafeed.prototype._makeTemplate = function(template, data) {\n\t      var output, pattern, ref, varName, varValue;\n\t      pattern = /(?:\\{{2})([\\w\\[\\]\\.]+)(?:\\}{2})/;\n\t      output = template;\n\t      while (pattern.test(output)) {\n\t        varName = output.match(pattern)[1];\n\t        varValue = (ref = this._getObjectProperty(data, varName)) != null ? ref : '';\n\t        output = output.replace(pattern, function() {\n\t          return \"\" + varValue;\n\t        });\n\t      }\n\t      return output;\n\t    };\n\t\n\t    Instafeed.prototype._getObjectProperty = function(object, property) {\n\t      var piece, pieces;\n\t      property = property.replace(/\\[(\\w+)\\]/g, '.$1');\n\t      pieces = property.split('.');\n\t      while (pieces.length) {\n\t        piece = pieces.shift();\n\t        if ((object != null) && piece in object) {\n\t          object = object[piece];\n\t        } else {\n\t          return null;\n\t        }\n\t      }\n\t      return object;\n\t    };\n\t\n\t    Instafeed.prototype._sortBy = function(data, property, reverse) {\n\t      var sorter;\n\t      sorter = function(a, b) {\n\t        var valueA, valueB;\n\t        valueA = this._getObjectProperty(a, property);\n\t        valueB = this._getObjectProperty(b, property);\n\t        if (reverse) {\n\t          if (valueA > valueB) {\n\t            return 1;\n\t          } else {\n\t            return -1;\n\t          }\n\t        }\n\t        if (valueA < valueB) {\n\t          return 1;\n\t        } else {\n\t          return -1;\n\t        }\n\t      };\n\t      data.sort(sorter.bind(this));\n\t      return data;\n\t    };\n\t\n\t    Instafeed.prototype._filter = function(images, filter) {\n\t      var filteredImages, fn, i, image, len;\n\t      filteredImages = [];\n\t      fn = function(image) {\n\t        if (filter(image)) {\n\t          return filteredImages.push(image);\n\t        }\n\t      };\n\t      for (i = 0, len = images.length; i < len; i++) {\n\t        image = images[i];\n\t        fn(image);\n\t      }\n\t      return filteredImages;\n\t    };\n\t\n\t    return Instafeed;\n\t\n\t  })();\n\t\n\t  (function(root, factory) {\n\t    if (true) {\n\t      return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module === 'object' && module.exports) {\n\t      return module.exports = factory();\n\t    } else {\n\t      return root.Instafeed = factory();\n\t    }\n\t  })(this, function() {\n\t    return Instafeed;\n\t  });\n\t\n\t}).call(this);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build/assets/js/app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8a28df028ced7bef5d99","import svg4everybody from 'svg4everybody';\nsvg4everybody();\n\nimport './partials/fetchInsta';\n\n\n// WEBPACK FOOTER //\n// ./resources/js/index.js","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/svg4everybody/dist/svg4everybody.js\n// module id = 1\n// module chunks = 0","import Instafeed from 'instafeed.js';\n\nconst fetchInsta = function(){\n    let container;\n    \n    const init = () => {\n        container = document.getElementById('instagram-feed');\n\n        const token = '7498090227.b1f6f12.19b1a288657644c68f2623ccb1ef5d82';\n\n        const url = 'https://api.instagram.com/v1/users/self/media/recent/?access_token='+token+'&count=9';\n\n        fetch(url, {method: 'get'})\n            .then(res => res.json())\n            .then(data => {\n\n                fillFeed(data.data);\n            })\n    };\n\n    const fillFeed = (data) => {\n        \n        data.map(post => {\n            const img = createImageTag(post.images.standard_resolution);\n            \n            container.appendChild(img);\n        });\n\n\n    };\n\n    const createImageTag = (el) => {\n        const img = document.createElement('img');\n        img.src = el.url;\n        return img;\n    };\n\n    return {\n        init\n    }\n}();\n\nfetchInsta.init();\n\n\n// WEBPACK FOOTER //\n// ./resources/js/partials/fetchInsta.js","// Generated by CoffeeScript 1.9.3\n(function() {\n  var Instafeed;\n\n  Instafeed = (function() {\n    function Instafeed(params, context) {\n      var option, value;\n      this.options = {\n        target: 'instafeed',\n        get: 'popular',\n        resolution: 'thumbnail',\n        sortBy: 'none',\n        links: true,\n        mock: false,\n        useHttp: false\n      };\n      if (typeof params === 'object') {\n        for (option in params) {\n          value = params[option];\n          this.options[option] = value;\n        }\n      }\n      this.context = context != null ? context : this;\n      this.unique = this._genKey();\n    }\n\n    Instafeed.prototype.hasNext = function() {\n      return typeof this.context.nextUrl === 'string' && this.context.nextUrl.length > 0;\n    };\n\n    Instafeed.prototype.next = function() {\n      if (!this.hasNext()) {\n        return false;\n      }\n      return this.run(this.context.nextUrl);\n    };\n\n    Instafeed.prototype.run = function(url) {\n      var header, instanceName, script;\n      if (typeof this.options.clientId !== 'string') {\n        if (typeof this.options.accessToken !== 'string') {\n          throw new Error(\"Missing clientId or accessToken.\");\n        }\n      }\n      if (typeof this.options.accessToken !== 'string') {\n        if (typeof this.options.clientId !== 'string') {\n          throw new Error(\"Missing clientId or accessToken.\");\n        }\n      }\n      if ((this.options.before != null) && typeof this.options.before === 'function') {\n        this.options.before.call(this);\n      }\n      if (typeof document !== \"undefined\" && document !== null) {\n        script = document.createElement('script');\n        script.id = 'instafeed-fetcher';\n        script.src = url || this._buildUrl();\n        header = document.getElementsByTagName('head');\n        header[0].appendChild(script);\n        instanceName = \"instafeedCache\" + this.unique;\n        window[instanceName] = new Instafeed(this.options, this);\n        window[instanceName].unique = this.unique;\n      }\n      return true;\n    };\n\n    Instafeed.prototype.parse = function(response) {\n      var anchor, childNodeCount, childNodeIndex, childNodesArr, e, eMsg, fragment, header, htmlString, httpProtocol, i, image, imageObj, imageString, imageUrl, images, img, imgHeight, imgOrient, imgUrl, imgWidth, instanceName, j, k, len, len1, len2, node, parsedLimit, reverse, sortSettings, targetEl, tmpEl;\n      if (typeof response !== 'object') {\n        if ((this.options.error != null) && typeof this.options.error === 'function') {\n          this.options.error.call(this, 'Invalid JSON data');\n          return false;\n        } else {\n          throw new Error('Invalid JSON response');\n        }\n      }\n      if (response.meta.code !== 200) {\n        if ((this.options.error != null) && typeof this.options.error === 'function') {\n          this.options.error.call(this, response.meta.error_message);\n          return false;\n        } else {\n          throw new Error(\"Error from Instagram: \" + response.meta.error_message);\n        }\n      }\n      if (response.data.length === 0) {\n        if ((this.options.error != null) && typeof this.options.error === 'function') {\n          this.options.error.call(this, 'No images were returned from Instagram');\n          return false;\n        } else {\n          throw new Error('No images were returned from Instagram');\n        }\n      }\n      if ((this.options.success != null) && typeof this.options.success === 'function') {\n        this.options.success.call(this, response);\n      }\n      this.context.nextUrl = '';\n      if (response.pagination != null) {\n        this.context.nextUrl = response.pagination.next_url;\n      }\n      if (this.options.sortBy !== 'none') {\n        if (this.options.sortBy === 'random') {\n          sortSettings = ['', 'random'];\n        } else {\n          sortSettings = this.options.sortBy.split('-');\n        }\n        reverse = sortSettings[0] === 'least' ? true : false;\n        switch (sortSettings[1]) {\n          case 'random':\n            response.data.sort(function() {\n              return 0.5 - Math.random();\n            });\n            break;\n          case 'recent':\n            response.data = this._sortBy(response.data, 'created_time', reverse);\n            break;\n          case 'liked':\n            response.data = this._sortBy(response.data, 'likes.count', reverse);\n            break;\n          case 'commented':\n            response.data = this._sortBy(response.data, 'comments.count', reverse);\n            break;\n          default:\n            throw new Error(\"Invalid option for sortBy: '\" + this.options.sortBy + \"'.\");\n        }\n      }\n      if ((typeof document !== \"undefined\" && document !== null) && this.options.mock === false) {\n        images = response.data;\n        parsedLimit = parseInt(this.options.limit, 10);\n        if ((this.options.limit != null) && images.length > parsedLimit) {\n          images = images.slice(0, parsedLimit);\n        }\n        fragment = document.createDocumentFragment();\n        if ((this.options.filter != null) && typeof this.options.filter === 'function') {\n          images = this._filter(images, this.options.filter);\n        }\n        if ((this.options.template != null) && typeof this.options.template === 'string') {\n          htmlString = '';\n          imageString = '';\n          imgUrl = '';\n          tmpEl = document.createElement('div');\n          for (i = 0, len = images.length; i < len; i++) {\n            image = images[i];\n            imageObj = image.images[this.options.resolution];\n            if (typeof imageObj !== 'object') {\n              eMsg = \"No image found for resolution: \" + this.options.resolution + \".\";\n              throw new Error(eMsg);\n            }\n            imgWidth = imageObj.width;\n            imgHeight = imageObj.height;\n            imgOrient = \"square\";\n            if (imgWidth > imgHeight) {\n              imgOrient = \"landscape\";\n            }\n            if (imgWidth < imgHeight) {\n              imgOrient = \"portrait\";\n            }\n            imageUrl = imageObj.url;\n            httpProtocol = window.location.protocol.indexOf(\"http\") >= 0;\n            if (httpProtocol && !this.options.useHttp) {\n              imageUrl = imageUrl.replace(/https?:\\/\\//, '//');\n            }\n            imageString = this._makeTemplate(this.options.template, {\n              model: image,\n              id: image.id,\n              link: image.link,\n              type: image.type,\n              image: imageUrl,\n              width: imgWidth,\n              height: imgHeight,\n              orientation: imgOrient,\n              caption: this._getObjectProperty(image, 'caption.text'),\n              likes: image.likes.count,\n              comments: image.comments.count,\n              location: this._getObjectProperty(image, 'location.name')\n            });\n            htmlString += imageString;\n          }\n          tmpEl.innerHTML = htmlString;\n          childNodesArr = [];\n          childNodeIndex = 0;\n          childNodeCount = tmpEl.childNodes.length;\n          while (childNodeIndex < childNodeCount) {\n            childNodesArr.push(tmpEl.childNodes[childNodeIndex]);\n            childNodeIndex += 1;\n          }\n          for (j = 0, len1 = childNodesArr.length; j < len1; j++) {\n            node = childNodesArr[j];\n            fragment.appendChild(node);\n          }\n        } else {\n          for (k = 0, len2 = images.length; k < len2; k++) {\n            image = images[k];\n            img = document.createElement('img');\n            imageObj = image.images[this.options.resolution];\n            if (typeof imageObj !== 'object') {\n              eMsg = \"No image found for resolution: \" + this.options.resolution + \".\";\n              throw new Error(eMsg);\n            }\n            imageUrl = imageObj.url;\n            httpProtocol = window.location.protocol.indexOf(\"http\") >= 0;\n            if (httpProtocol && !this.options.useHttp) {\n              imageUrl = imageUrl.replace(/https?:\\/\\//, '//');\n            }\n            img.src = imageUrl;\n            if (this.options.links === true) {\n              anchor = document.createElement('a');\n              anchor.href = image.link;\n              anchor.appendChild(img);\n              fragment.appendChild(anchor);\n            } else {\n              fragment.appendChild(img);\n            }\n          }\n        }\n        targetEl = this.options.target;\n        if (typeof targetEl === 'string') {\n          targetEl = document.getElementById(targetEl);\n        }\n        if (targetEl == null) {\n          eMsg = \"No element with id=\\\"\" + this.options.target + \"\\\" on page.\";\n          throw new Error(eMsg);\n        }\n        targetEl.appendChild(fragment);\n        header = document.getElementsByTagName('head')[0];\n        header.removeChild(document.getElementById('instafeed-fetcher'));\n        instanceName = \"instafeedCache\" + this.unique;\n        window[instanceName] = void 0;\n        try {\n          delete window[instanceName];\n        } catch (_error) {\n          e = _error;\n        }\n      }\n      if ((this.options.after != null) && typeof this.options.after === 'function') {\n        this.options.after.call(this);\n      }\n      return true;\n    };\n\n    Instafeed.prototype._buildUrl = function() {\n      var base, endpoint, final;\n      base = \"https://api.instagram.com/v1\";\n      switch (this.options.get) {\n        case \"popular\":\n          endpoint = \"media/popular\";\n          break;\n        case \"tagged\":\n          if (!this.options.tagName) {\n            throw new Error(\"No tag name specified. Use the 'tagName' option.\");\n          }\n          endpoint = \"tags/\" + this.options.tagName + \"/media/recent\";\n          break;\n        case \"location\":\n          if (!this.options.locationId) {\n            throw new Error(\"No location specified. Use the 'locationId' option.\");\n          }\n          endpoint = \"locations/\" + this.options.locationId + \"/media/recent\";\n          break;\n        case \"user\":\n          if (!this.options.userId) {\n            throw new Error(\"No user specified. Use the 'userId' option.\");\n          }\n          endpoint = \"users/\" + this.options.userId + \"/media/recent\";\n          break;\n        default:\n          throw new Error(\"Invalid option for get: '\" + this.options.get + \"'.\");\n      }\n      final = base + \"/\" + endpoint;\n      if (this.options.accessToken != null) {\n        final += \"?access_token=\" + this.options.accessToken;\n      } else {\n        final += \"?client_id=\" + this.options.clientId;\n      }\n      if (this.options.limit != null) {\n        final += \"&count=\" + this.options.limit;\n      }\n      final += \"&callback=instafeedCache\" + this.unique + \".parse\";\n      return final;\n    };\n\n    Instafeed.prototype._genKey = function() {\n      var S4;\n      S4 = function() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n      };\n      return \"\" + (S4()) + (S4()) + (S4()) + (S4());\n    };\n\n    Instafeed.prototype._makeTemplate = function(template, data) {\n      var output, pattern, ref, varName, varValue;\n      pattern = /(?:\\{{2})([\\w\\[\\]\\.]+)(?:\\}{2})/;\n      output = template;\n      while (pattern.test(output)) {\n        varName = output.match(pattern)[1];\n        varValue = (ref = this._getObjectProperty(data, varName)) != null ? ref : '';\n        output = output.replace(pattern, function() {\n          return \"\" + varValue;\n        });\n      }\n      return output;\n    };\n\n    Instafeed.prototype._getObjectProperty = function(object, property) {\n      var piece, pieces;\n      property = property.replace(/\\[(\\w+)\\]/g, '.$1');\n      pieces = property.split('.');\n      while (pieces.length) {\n        piece = pieces.shift();\n        if ((object != null) && piece in object) {\n          object = object[piece];\n        } else {\n          return null;\n        }\n      }\n      return object;\n    };\n\n    Instafeed.prototype._sortBy = function(data, property, reverse) {\n      var sorter;\n      sorter = function(a, b) {\n        var valueA, valueB;\n        valueA = this._getObjectProperty(a, property);\n        valueB = this._getObjectProperty(b, property);\n        if (reverse) {\n          if (valueA > valueB) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n        if (valueA < valueB) {\n          return 1;\n        } else {\n          return -1;\n        }\n      };\n      data.sort(sorter.bind(this));\n      return data;\n    };\n\n    Instafeed.prototype._filter = function(images, filter) {\n      var filteredImages, fn, i, image, len;\n      filteredImages = [];\n      fn = function(image) {\n        if (filter(image)) {\n          return filteredImages.push(image);\n        }\n      };\n      for (i = 0, len = images.length; i < len; i++) {\n        image = images[i];\n        fn(image);\n      }\n      return filteredImages;\n    };\n\n    return Instafeed;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n      return module.exports = factory();\n    } else {\n      return root.Instafeed = factory();\n    }\n  })(this, function() {\n    return Instafeed;\n  });\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/instafeed.js/instafeed.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}